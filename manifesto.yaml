apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app: nodehot
  name: nodehot
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nodehot
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nodehot
    spec:
      volumes:
      - configMap:
          items:
          - key: config
            path: config
          name: oci-config
        name: oci-config
      - configMap:
          items:
          - key: oci_api_key.pem
            path: oci_api_key.pem
          name: oci-apikey 
        name: oci-apikey      
      containers:
      - image: gru.ocir.io/id3kyspkytmr/projeto:v101
        imagePullPolicy: IfNotPresent
        name: nodehot
        ports:
        - containerPort: 3000
          protocol: TCP
        volumeMounts:
        - mountPath: /home/opc/.oci/config
          name: oci-config
          subPath: config
        - mountPath: /home/opc/.oci/oci_api_key.pem
          name: oci-apikey
          subPath: oci_api_key.pem
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: ocisecret
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
